create Remote Repo (5 files -> t1..t5.txt)
1. have a copy of entire repo on local machine (c:\dummy)
------->
 git clone https://github.com/ankita-ugale23/assignment3.git
Cloning into 'assignment3'...
remote: Enumerating objects: 11, done.
remote: Counting objects: 100% (11/11), done.
remote: Compressing objects: 100% (9/9), done.
remote: Total 11 (delta 3), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (11/11), done.
==================================================================================================================================
2. Add three more files t1..t3.java to local repo and commit to remote repo
ls
t1.txt  t2.txt  t3.txt  t4.txt  t5.txt
 touch t1.java
touch tt1.java
touch tt2.java
 touch tt3.java
 ls
t1.txt  t2.txt  t3.txt  t4.txt  t5.txt  tt1.java  tt2.java  tt3.java
git add *.java
 git status
On branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

new file:   tt1.java
new file:   tt2.java
new file:   tt3.java

 3 files changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 tt1.java
 create mode 100644 tt2.java
 create mode 100644 tt3.java
git push -u origin master

   130de59..e2faa22  main -> main
Branch 'main' set up to track remote branch 'main' from 'origin'.
git branch
* main
git status
On branch main
Your branch is up to date with 'origin/main'.


=============================================================================================================================

3. Add *.doc files to local directory
     see untracked files
        docs will be listed here
    create gitignore file to remove *.doc
    see untracked files
        docs will not be listed here

touch aa.doc
 touch bb.doc
ls
aa.doc  bb.doc  t1.txt  t2.txt  t3.txt  t4.txt  t5.txt  tt1.java  tt2.java  tt3.java
[git status
On branch main
Your branch is up to date with 'origin/main'.

Untracked files:
  (use "git add <file>..." to include in what will be committed)

aa.doc
bb.doc

nothing added to commit but untracked files present (use "git add" to track)
touch .gitignore
vim .gitignore
git status
On branch main
Your branch is up to date with 'origin/main'.

Untracked files:
  (use "git add <file>..." to include in what will be committed)

.gitignore

nothing added to commit but untracked files present (use "git add" to track)
[vasuki.rohilla@DM1033 day3assign]$

4.
5.
6.
7.
 git add .
git commit -m "gitignore commit second"
[main e7ed13e] gitignore commit second


 1 file changed, 1 insertion(+)
 create mode 100644 .gitignore
 
 git push -u origin main

Branch 'main' set up to track remote branch 'main' from 'origin'.

$ git status
On branch main
Your branch is up to date with 'origin/main'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

modified:   tt1.java

no changes added to commit (use "git add" and/or "git commit -a")
git add tt1.java
git commit -m "third commit tt1.java"
[main c54e154] third commit tt1.java

 git diff
diff --git a/tt1.java b/tt1.java
index c0670be..df1b468 100644
--- a/tt1.java
+++ b/tt1.java
@@ -1 +1,3 @@
 hekkoiowefkenfkerupadcwkruwiqrncruwiu
+dhudyuskjioiws
+

no changes added to commit (use "git add" and/or "git commit -a")
 git status
On branch main
Your branch is ahead of 'origin/main' by 1 commit.
  (use "git push" to publish your local commits)

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

modified:   tt1.java

no changes added to commit (use "git add" and/or "git commit -a")
 git diff
diff --git a/tt1.java b/tt1.java
index c0670be..98f2334 100644
--- a/tt1.java
+++ b/tt1.java
@@ -1 +1,3 @@
-hekkoiowefkenfkerupadcwkruwiqrncruwiu
+class a{
+
+}
git add tt1.java
 git commit -m "fourth commit tt1.java"
[main 5dd440a] fourth commit tt1.java

 1 file changed, 3 insertions(+), 1 deletion(-)

git status
On branch main
Your branch is ahead of 'origin/main' by 2 commits.
  (use "git push" to publish your local commits)

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

modified:   tt1.java

no changes added to commit (use "git add" and/or "git commit -a")
 git diff
diff --git a/tt1.java b/tt1.java
index 98f2334..9cdaac4 100644
--- a/tt1.java
+++ b/tt1.java
@@ -1,3 +1,4 @@
 class a{
-
+public static void main(String []args)
+{}
 }
git add tt1.java
git commit -m "fifth commit tt1.java"
[main 1b53af0] fifth commit tt1.java
 1 file changed, 2 insertions(+), 1 deletion(-)
 
git branch
* main
 rm t1.txt
git status
On branch main
Your branch is ahead of 'origin/main' by 3 commits.
  (use "git push" to publish your local commits)

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

deleted:    t1.txt

no changes added to commit (use "git add" and/or "git commit -a")
 git checkout t1.txt
Updated 1 path from the index
$ git status
On branch main
Your branch is ahead of 'origin/main' by 3 commits.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean
ssign]$ ls
aa.doc  t1.txt  t3.txt  t5.txt    tt2.java
bb.doc  t2.txt  t4.txt  tt1.java  tt3.java
 git status
On branch main
Your branch is ahead of 'origin/main' by 3 commits.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean
 git push -u origin main

 git status
On branch main
Your branch is up to date with 'origin/main'.

git status
On branch main
Your branch is up to date with 'origin/main'.

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

deleted:    t1.txt

no changes added to commit (use "git add" and/or "git commit -a")
$ git rm t1.txt
rm 't1.txt'
 git status
On branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

deleted:    t1.txt

 git pull
Already up to date.
[vasuki.rohilla@DM1033 day3assign]$ git commit -m "sixth commit rm file"
[main 852eb41] sixth commit rm file

git pull
Already up to date.
ls
aa.doc  bb.doc  t2.txt  t3.txt  t4.txt  t5.txt  tt1.java  tt2.java  tt3.java
git pull origin main

 * branch            main       -> FETCH_HEAD
Already up to date.



